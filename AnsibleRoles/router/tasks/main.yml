- name: Copy eth1 interface file
  ansible.builtin.copy:
    src: r1eth1
    dest: /etc/network/interfaces.d/eth1
    mode: 0644
    validate: /usr/sbin/ifup --no-act -i %s eth1
  notify: Restart Networking

- name: Copy eth2 interface file
  ansible.builtin.copy:
    src: r1eth2
    dest: /etc/network/interfaces.d/eth2
    mode: 0644
    validate: /usr/sbin/ifup --no-act -i %s eth2
  notify: Restart Networking

- name: Change allow-hotplug with auto
  ansible.builtin.replace:
    path: "/etc/network/interfaces"
    regexp: '^allow\-hotplug'
    replace: "auto"
    validate: /usr/sbin/ifup --no-act -i %s eth0

- name: Ensure routing is allowed
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    state: present
    line: "net.ipv4.ip_forward=1"
  notify: Reload sysctl
    
#delete following if no DHCP

- name: run atp update
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 86400 # 1 day

- name: Install the package DNSMASQ
  ansible.builtin.apt:
    name: dnsmasq

- name: Copy dnsmasq.conf
  ansible.builtin.copy:
    src: dnsmasq1Subnet.conf
    dest: /etc/dnsmasq.conf
    mode: 0644
  notify: Restart dnsmasq
  
- name: Validate dnsmasq configuration
  command: /usr/sbin/dnsmasq --test
  register: dnsmasq_test_result
  failed_when: "'dnsmasq: syntax check OK.' not in dnsmasq_test_result.stdout and 'dnsmasq: syntax check OK.' not in dnsmasq_test_result.stderr"


- name: Enable Dnsmasq at boot
  ansible.builtin.systemd:
    name: dnsmasq.service
    state: started
    enabled: true

